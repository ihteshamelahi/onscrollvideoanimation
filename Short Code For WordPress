// Function to generate the shortcode output
function custom_video_scroll_shortcode() {
	    if (is_home() || is_front_page()) {

    ob_start(); ?>
    <style>
        /* CSS styles */
        html, body {
            height: 100%;
            overflow: hidden;
        }
        body {
            overflow: auto;
        }
        .canvas-wrapper {
            position: sticky;
            top: 0;
            left: 0;
            display: grid;
            width: 100%;
            height: 100vh;
            margin: 0 auto;
            overflow: hidden;
        }
        video {
            opacity: 0;
            top: 0;
            left: 0;
            max-width: 100%;
            max-height: 100%;
            position: absolute;
            pointer-events: none;
        }
        canvas {
            width: 100vw;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            object-fit: cover;
            object-position: center center;
        }
        .vh-100 {
            height: 100vh;
            width: 100%;
            position: relative;
            display: grid;
            justify-content: center;
            align-items: center;
        }
    </style>
 
    <main class="wrap-video-custom">
        <div class="canvas-wrapper">
            <video muted playsinline preload="preload" autobuffer="autobuffer">
                <source type="video/mp4" src="https://hawkvrvision.com/wp-content/uploads/2023/12/vr-animation-2.mp4" />
            </video>
            <canvas></canvas>
        </div>
        <section class="vh-100"></section>
        <section class="vh-100"></section>
    </main>
 
    <script>
        // JavaScript code
       class ScrollVideo {
    constructor(elem) {
        this.elem = elem;
        this.video = this.elem.querySelector("video");
        this.videoDuration = 0.001;
        this.canvas = this.elem.querySelector("canvas");
        this.ctx = this.canvas.getContext("2d");
        this.seeked = true;
    }
    setVideoDuration() {
        console.log("ondurationchange");
        this.videoDuration = this.video.duration;
    }
    init() {
        // this.video.ondurationchange = this.setVideoDuration();
        this.video.oncanplay = this.loop();
        this.video.currentTime = 0.001;
        this.initObserver();
    }
    loop() {
        requestAnimationFrame(() => this.loop());
 
        if (this.seeked) {
            this.seeked = false;
            const { scrollHeight, clientHeight, scrollTop } = document.body;
            const maxScroll = scrollHeight - clientHeight;
			 const scrollMultiplier = 5; 
             const scrollProgress = scrollTop * scrollMultiplier / Math.max(maxScroll, 1);
 
            //canvas.width = document.body.clientWidth;
            //canvas.height = document.body.clientHeight;
            this.canvas.width = this.video.videoWidth;
            this.canvas.height = this.video.videoHeight;
 
            if (!isNaN(this.video.duration)) {
                this.video.currentTime = this.video.duration * scrollProgress;
            }
 
            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
            this.ctx.drawImage(
                this.video,
                0,
                0,
                this.canvas.width,
                this.canvas.height
            );
        }
    }
    initObserver() {
        this.video.addEventListener("seeked", () => {
            this.seeked = true;
        });
    }
}
 
        // Initialization of ScrollVideo
        document.addEventListener("DOMContentLoaded", function() {
            const Components = document.querySelectorAll(".canvas-wrapper");
            Components.forEach((item) => {
                const component = new ScrollVideo(item);
                component.init();
            });
        });
    </script>
    <?php
    return ob_get_clean();
		}
}
add_shortcode('custom_video_scroll', 'custom_video_scroll_shortcode');
